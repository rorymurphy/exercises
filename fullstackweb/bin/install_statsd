#!/bin/bash

#exit on first error
set -e
#tweaking a script from
#http://www.kinvey.com/blog/89/how-to-set-up-metric-collection-using-graphite-and-statsd-on-ubuntu-1204-lts
#these instruction were for a previous version of statsd and graphite
#also, in our case, node will get installed from the canonical repository,
#whereas the script was using a distro someone forked.

#need a reference to the path where the script is located, since conf and data resources are relative to this
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
echo $DIR
#since this is going into a docker container, this shouldn't be necessary - was being used to expedite local testing
rm -rf /opt/statsd/
rm -rf /opt/graphite/
rm -rf /usr/local/lib/graphite

# node.js using PPA (for statsd)
# System level dependencies for Graphite
apt-get -y install python-software-properties memcached python-dev python-pip sqlite3 libcairo2 \
libcairo2-dev python-cairo pkg-config

mkdir -p /usr/local/lib
virtualenv /usr/local/lib/graphite
source /usr/local/lib/graphite/bin/activate

# Install carbon and graphite deps
cat >> /tmp/graphite_reqs.txt << EOF
django==1.4.2
python-memcached
django-tagging
twisted<12.0
whisper==0.9.10
carbon==0.9.10
graphite-web==0.9.10
EOF
 
pip install -r /tmp/graphite_reqs.txt
 
#
# Configure carbon
#
cp /opt/graphite/conf/carbon.conf.example /opt/graphite/conf/carbon.conf
 
# Create storage schema and copy it over
# Using the sample as provided in the statsd README
# https://github.com/etsy/statsd#graphite-schema
 
cat >> /tmp/storage-schemas.conf << EOF
# Schema definitions for Whisper files. Entries are scanned in order,
# and first match wins. This file is scanned for changes every 60 seconds.
#
# [name]
# pattern = regex
# retentions = timePerPoint:timeToStore, timePerPoint:timeToStore, ...
[stats]
priority = 110
pattern = ^stats\..*
retentions = 10s:6h,1m:7d,10m:1y
EOF
 
cp /tmp/storage-schemas.conf /opt/graphite/conf/storage-schemas.conf
 
# Make sure log dir exists for webapp
mkdir -p /opt/graphite/storage/log/webapp
 
# Copy over the local settings file and initialize database
cp $DIR/../conf/graphite/local_settings.py /opt/graphite/webapp/graphite/local_settings.py
cp $DIR/../data/graphite.db /opt/graphite/storage/graphite.db
 
# statsd
cd /opt && git clone git://github.com/etsy/statsd.git
cd /opt/statsd && git checkout v0.7.1
 
# StatsD configuration
cat >> /tmp/localConfig.js << EOF
{
graphitePort: 2003
, graphiteHost: "127.0.0.1"
, port: 8125
}
EOF
 
cp /tmp/localConfig.js /opt/statsd/localConfig.js
rm /tmp/graphite_reqs.txt
rm /tmp/localConfig.js